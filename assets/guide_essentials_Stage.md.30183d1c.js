import{_ as s,o as a,c as t,a as n}from"./app.9397061b.js";const A=JSON.parse('{"title":"Stage","description":"","frontmatter":{},"headers":[],"relativePath":"guide/essentials/Stage.md","lastUpdated":1677945797000}'),e={name:"guide/essentials/Stage.md"},o=n(`<h1 id="stage" tabindex="-1">Stage <a class="header-anchor" href="#stage" aria-hidden="true">#</a></h1><p>Stage constructor. A stage is used to contain multiple layers</p><p><code>Stage</code> is essentially a vault where events interact (api events) and contains <code>Layer</code></p><p>in the DOM <code>Stage</code> manifests as a <code>&lt;div&gt;</code> tag</p><p>In addition, this shape also provides a few other parameters:</p><h2 id="optional-option" tabindex="-1">Optional Option <a class="header-anchor" href="#optional-option" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>container</td><td><code>MayBeRef&lt;string | HTMLElement&gt;</code></td><td>HTMLDivElement</td><td>Specified element to represent <a href="./Layer">Layer</a> and event interactions</td></tr><tr><td>width</td><td><code>MayBeRef&lt;string&gt;</code></td><td>300</td><td>width length</td></tr><tr><td>height</td><td><code>MayBeRef&lt;string&gt;</code></td><td>300</td><td>height length</td></tr><tr><td>visible</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>true</td><td>Is the stage displayed?</td></tr><tr><td>opacity</td><td><code>MayBeRef&lt;number&gt;</code></td><td>1</td><td>Sets the opacity of the stage</td></tr><tr><td>autoDraw</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>true</td><td>added <a href="./Layer">Layer</a> will automatically be drawn</td></tr><tr><td>offscreen</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>false</td><td>if it is <code>true</code> the stage will not show anything. the <code>container</code> option will be disabled. you don&#39;t need to care about this it is automatically installed in different environments like <code>browser</code>, <code>nodejs</code>, <code>worker</code>...</td></tr><tr><td>filter</td><td><code>MayBeRef&lt;&quot;none&quot; | Filter&gt;</code></td><td>&quot;none&quot;</td><td>option this set <a href="/guide/styling/filter">filter</a></td></tr><tr><td>x</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>x from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>y</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>y from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>scale</td><td><code>MayBeRef&lt;{ x: number; y: number }&gt;</code></td><td><code>{ x: 1, y: 1 }</code></td><td>scale from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>rotation</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>rotation from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>offset</td><td><code>MayBeRef&lt;{ x: number; y: number }&gt;</code></td><td><code>{ x: 1, y: 1 }</code></td><td>offset from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>skewX</td><td><code>MayBeRef&lt;number&gt;</code></td><td>1</td><td>skewX from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>skewY</td><td><code>MayBeRef&lt;number&gt;</code></td><td>1</td><td>skewY from option <a href="/guide/styling/transform">Transform</a></td></tr></tbody></table><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Filter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// string</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">blur</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// px</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">brightness</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">contrast</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0 -&gt; 100%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">dropShadow</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">blur</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// intpx &gt; 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">greyscale</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hueRotate</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0 -&gt; 360 deg</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">invert</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">opacity</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0 -&gt; 100%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">saturate</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">sepia</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="get" tabindex="-1">Get <a class="header-anchor" href="#get" aria-hidden="true">#</a></h2><h3 id="as-attrs" tabindex="-1">$ (as attrs) <a class="header-anchor" href="#as-attrs" aria-hidden="true">#</a></h3><p>A Proxy that contains all the settings allowing to get/set the value of props and react automatically</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">container) </span><span style="color:#676E95;font-style:italic;">// &quot;#app&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="computed" tabindex="-1">Computed <a class="header-anchor" href="#computed" aria-hidden="true">#</a></h2><h3 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-hidden="true">#</a></h3><p>This <code>computed</code> returns the manifest size of <code>Stage</code></p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> width</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> height </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span></span>
<span class="line"></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="mount-query" tabindex="-1">mount(query) <a class="header-anchor" href="#mount-query" aria-hidden="true">#</a></h3><p>This function is a shortcut to set <code>container</code></p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(query: string </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> HTMLElement): </span><span style="color:#89DDFF;">this;</span></span>
<span class="line"></span></code></pre></div><p>it is equivalent to:</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">container </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> query</span></span>
<span class="line"></span></code></pre></div><h3 id="getboundingclientrect" tabindex="-1">getBoundingClientRect() <a class="header-anchor" href="#getboundingclientrect" aria-hidden="true">#</a></h3><p>This function returns the size and position of the expression of <code>Stage</code> it&#39;s the same as <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noreferrer">Element.getBoundingClientRect</a></p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">getBoundingClientRect</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> number</span></span>
<span class="line"><span style="color:#A6ACCD;">  height: number</span></span>
<span class="line"><span style="color:#A6ACCD;">  x: number</span></span>
<span class="line"><span style="color:#A6ACCD;">  y: number</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="add-node" tabindex="-1">add(node) <a class="header-anchor" href="#add-node" aria-hidden="true">#</a></h3><p>Add <a href="./Layer">Layer</a> to <code>Stage</code></p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(node: Layer): ChildNodes</span></span>
<span class="line"></span></code></pre></div><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-hidden="true">#</a></h3><p>Destroy <code>Stage</code></p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">destroy</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre></div>`,31),l=[o];function p(r,c,d,i,y,C){return a(),t("div",null,l)}const D=s(e,[["render",p]]);export{A as __pageData,D as default};
