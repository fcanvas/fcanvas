import{_ as s,o as a,c as e,b as n}from"./app.13e63717.js";const b=JSON.parse('{"title":"Layer","description":"","frontmatter":{},"headers":[],"relativePath":"guide/essentials/Layer.md","lastUpdated":1678173885000}'),t={name:"guide/essentials/Layer.md"},l=n(`<h1 id="layer" tabindex="-1">Layer <a class="header-anchor" href="#layer" aria-hidden="true">#</a></h1><p><code>Layer</code> contains <a href="./Shape">Shape</a> and <a href="./Group">Group</a> which represent an actual drawn canvas</p><p>In addition, this shape also provides a few other parameters:</p><h2 id="optional-option" tabindex="-1">Optional Option <a class="header-anchor" href="#optional-option" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>width</td><td><code>MayBeRef&lt;string&gt;</code></td><td>= Stage width ?? 300</td><td>width length</td></tr><tr><td>height</td><td><code>MayBeRef&lt;string&gt;</code></td><td>= Stage height ?? 300</td><td>height length</td></tr><tr><td>visible</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>true</td><td>Is the stage displayed?</td></tr><tr><td>opacity</td><td><code>MayBeRef&lt;number&gt;</code></td><td>1</td><td>Sets the opacity of the stage</td></tr><tr><td>clip</td><td><code>MayBeRef&lt;Rect | Path2D&gt;</code></td><td>undefined</td><td>The layer will be clipped whether it accepts a <code>Rect</code> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/Path2D/Path2D" target="_blank" rel="noreferrer">Path2D</a></td></tr><tr><td>autoDraw</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>true</td><td>added <a href="./Layer">Layer</a> will automatically be drawn</td></tr><tr><td>clearBeforeDraw</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>true</td><td>clear after draw?</td></tr><tr><td>offscreen</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>false</td><td>if it is <code>true</code> the stage will not show anything. the <code>container</code> option will be disabled. you don&#39;t need to care about this it is automatically installed in different environments like <code>browser</code>, <code>nodejs</code>, <code>worker</code>...</td></tr><tr><td>filter</td><td><code>MayBeRef&lt;&quot;none&quot; | Filter&gt;</code></td><td>&quot;none&quot;</td><td>filter</td></tr><tr><td>x</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>x from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>y</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>y from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>scale</td><td><code>MayBeRef&lt;{ x: number; y: number }&gt;</code></td><td><code>{ x: 1, y: 1 }</code></td><td>scale from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>rotation</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>rotation from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>offset</td><td><code>MayBeRef&lt;{ x: number; y: number }&gt;</code></td><td><code>{ x: 1, y: 1 }</code></td><td>offset from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>skewX</td><td><code>MayBeRef&lt;number&gt;</code></td><td>1</td><td>skewX from option <a href="/guide/styling/transform">Transform</a></td></tr><tr><td>skewY</td><td><code>MayBeRef&lt;number&gt;</code></td><td>1</td><td>skewY from option <a href="/guide/styling/transform">Transform</a></td></tr></tbody></table><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Filter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">url</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// string</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">blur</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// px</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">brightness</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">contrast</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0 -&gt; 100%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">dropShadow</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">blur</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// intpx &gt; 0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">greyscale</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">hueRotate</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0 -&gt; 360 deg</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">invert</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">opacity</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 0 -&gt; 100%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">saturate</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">sepia</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// int%</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="get" tabindex="-1">Get <a class="header-anchor" href="#get" aria-hidden="true">#</a></h2><h3 id="as-attrs" tabindex="-1">$ (as attrs) <a class="header-anchor" href="#as-attrs" aria-hidden="true">#</a></h3><p>A Proxy that contains all the settings allowing to get/set the value of props and react automatically</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clearBeforeDraw </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">clearBeforeDraw) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="uid" tabindex="-1">uid <a class="header-anchor" href="#uid" aria-hidden="true">#</a></h3><p>A <code>uid</code> <code>Layer</code>. Return value is <code>string</code></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="getboundingclientrect" tabindex="-1">getBoundingClientRect() <a class="header-anchor" href="#getboundingclientrect" aria-hidden="true">#</a></h3><p>This function returns the size and position of the expression of <code>Stage</code> it&#39;s the same as <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noreferrer">Element.getBoundingClientRect</a></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">getBoundingClientRect</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> number</span></span>
<span class="line"><span style="color:#A6ACCD;">  height: number</span></span>
<span class="line"><span style="color:#A6ACCD;">  x: number</span></span>
<span class="line"><span style="color:#A6ACCD;">  y: number</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="draw" tabindex="-1">draw() <a class="header-anchor" href="#draw" aria-hidden="true">#</a></h3><p>Make <code>Layer</code> draw once. It returns a <code>boolean</code> that checks if the <code>Layer</code> needs redraw</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">draw</span><span style="color:#A6ACCD;">(): boolean</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="batchdraw" tabindex="-1">batchDraw() <a class="header-anchor" href="#batchdraw" aria-hidden="true">#</a></h3><p>Smart redraw. This function will redraw <code>Layer</code> continuously until <code>stopDraw()</code> is called.</p><p>If it detects that <code>Layer</code> doesn&#39;t need to be redrawn it will pause the drawing process and wait until the <code>Layer</code> changes and resume drawing.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This function is automatically called if <code>autoDraw !== false</code></p></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">batchDraw</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="stopdraw" tabindex="-1">stopDraw() <a class="header-anchor" href="#stopdraw" aria-hidden="true">#</a></h3><p>Stop the continuous redraw called with <code>batchDraw()</code></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">stopDraw</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="add-node" tabindex="-1">add(node) <a class="header-anchor" href="#add-node" aria-hidden="true">#</a></h3><p>Add an element to <code>Layer</code>. <code>node</code> is <a href="./Shape">Shape</a> or <a href="./Group">Group</a></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(node: Shape </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Group): ChildNodes</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="delete-node" tabindex="-1">delete(node) <a class="header-anchor" href="#delete-node" aria-hidden="true">#</a></h3><p>Delete an element to <code>Layer</code>. <code>node</code> is <a href="./Shape">Shape</a> or <a href="./Group">Group</a></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">delete(</span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Shape</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Group</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="ispressedpoint-x-y" tabindex="-1">isPressedPoint(x, y) <a class="header-anchor" href="#ispressedpoint-x-y" aria-hidden="true">#</a></h3><p>Check if the point with coordinates <code>{x,y}</code> is in <code>Layer</code> or not</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">isPressedPoint</span><span style="color:#A6ACCD;">(x: number</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> y: number): boolean</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="addto-stage" tabindex="-1">addTo(stage) <a class="header-anchor" href="#addto-stage" aria-hidden="true">#</a></h3><p>Where to add <code>Layer</code></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">addTo</span><span style="color:#A6ACCD;">(stage: Stage): </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>it is equivalent to</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">stage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(layer)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-hidden="true">#</a></h3><p>Destroy <code>Layer</code></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">destroy</span><span style="color:#A6ACCD;">(): </span><span style="color:#89DDFF;">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,44),o=[l];function p(r,d,c,i,y,h){return a(),e("div",null,o)}const C=s(t,[["render",p]]);export{b as __pageData,C as default};
