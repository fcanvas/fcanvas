import{_ as a,o as s,c as t,b as o,a as n,r as l}from"./app.1366efc1.js";const F=JSON.parse('{"title":"ImageRepeat Shape","description":"","frontmatter":{},"headers":[],"relativePath":"guide/shapes/ImageRepeat.md","lastUpdated":1678014340000}'),p={name:"guide/shapes/ImageRepeat.md"},r=n(`<h1 id="imagerepeat-shape" tabindex="-1">ImageRepeat Shape <a class="header-anchor" href="#imagerepeat-shape" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This class is a descendant of <a href="/guide/essentials/Shape">Shape</a> it also inherits all the options that <a href="/guide/essentials/Shape">Shape</a> provides.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This component also supports a return function</p></div><p>A new need arises that when you need something to draw similar to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat" target="_blank" rel="noreferrer">background-repeat</a> use <code>ImageRepeat</code>.</p><p>For image property you can use:</p><p><code>image</code> An element to draw into the context. The specification permits any canvas image source, specifically,</p><ul><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement" target="_blank" rel="noreferrer">HTMLImageElement</a>,</li><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement" target="_blank" rel="noreferrer">SVGImageElement</a>,</li><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement" target="_blank" rel="noreferrer">HTMLVideoElement</a>,</li><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement" target="_blank" rel="noreferrer">HTMLCanvasElement</a>,</li><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap" target="_blank" rel="noreferrer">ImageBitmap</a>,</li><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas" target="_blank" rel="noreferrer">OffscreenCanvas</a>,</li><li>an <a href="https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame" target="_blank" rel="noreferrer">VideoFrame</a>,</li><li>or <code>string</code> is url image loaded. This <code>url</code> must have been loaded by <code>await loadImage(&#39;&lt;url&gt;&#39;)</code> before. <a href="/guide/functions/other-utils#loadImage">refer to loadImage</a></li></ul><p>In addition, this shape also provides a few other parameters:</p><h2 id="require-options" tabindex="-1">Require Options <a class="header-anchor" href="#require-options" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>image</td><td><code>MayBeRef&lt;CanvasImageSource | string&gt;</code></td><td>multiply by a value as stated above</td></tr></tbody></table><h3 id="inherit-shape" tabindex="-1">Inherit <a href="/guide/essentials/Shape">Shape</a> <a class="header-anchor" href="#inherit-shape" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>x</td><td><code>MayBeRef&lt;number&gt;</code></td><td>offset x</td></tr><tr><td>y</td><td><code>MayBeRef&lt;number&gt;</code></td><td>offset y</td></tr></tbody></table><h2 id="optional-options" tabindex="-1">Optional Options <a class="header-anchor" href="#optional-options" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>scrollWidth</td><td><code>MayBeRef&lt;number&gt;</code></td><td>= imageWidth</td><td>The width of the element to be visible. for example if <code>scrollWidth=100</code> the image will be repeatedly drawn until the total size &gt;= 100</td></tr><tr><td>scrollHeight</td><td><code>MayBeRef&lt;number&gt;</code></td><td>= imageHeight</td><td>The height of the element to be visible. for example if <code>scrollHeight=100</code> the image will be repeatedly drawn until the total size &gt;= 100</td></tr><tr><td>scrollTop</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>position y scrolled to it similar to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position" target="_blank" rel="noreferrer">background-position</a></td></tr><tr><td>scrollLeft</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>position x scrolled to it similar to <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position" target="_blank" rel="noreferrer">background-position</a></td></tr><tr><td>whileDraw</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>false</td><td>Is it constantly redrawing and ignoring the cache policy?</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The <code>crop</code> feature provided by this component is very simple. If you need more powerful cropping (e.g. <code>Tile</code>) use <a href="/guide/functions/other-utils#cropImage">cropImage</a></p></div><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Stage</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Layer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ImageRepeat</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">loadImage</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fcanvas</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> stage </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Stage</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> layer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Layer</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addTo</span><span style="color:#A6ACCD;">(stage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> image </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ImageRepeat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadImage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://google.com/favicon.ico</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">scrollWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">scrollHeight</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">150</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">scrollTop</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addTo</span><span style="color:#A6ACCD;">(layer)</span></span>
<span class="line"></span></code></pre></div>`,17);function c(i,d,y,h,D,A){const e=l("Preview");return s(),t("div",null,[r,o(e)])}const m=a(p,[["render",c]]);export{F as __pageData,m as default};
