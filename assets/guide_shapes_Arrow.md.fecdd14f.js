import{_ as a,o as n,c as e,b as t,a as o,r as l}from"./app.1366efc1.js";const A=JSON.parse('{"title":"Arrow Shape","description":"","frontmatter":{},"headers":[],"relativePath":"guide/shapes/Arrow.md","lastUpdated":1678014340000}'),p={name:"guide/shapes/Arrow.md"},r=o(`<h1 id="arrow-shape" tabindex="-1">Arrow Shape <a class="header-anchor" href="#arrow-shape" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This class is a descendant of <a href="/guide/shapes/Line">Line</a> it also inherits all the options that <a href="/guide/shapes/Line">Line</a> provides.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This component also supports a return function</p></div><p>To create an arrow shape with <code>fcanvas</code>, we can instantiate a <code>Arrow</code> object.</p><p>In addition, this shape also provides a few other parameters:</p><h2 id="require-options" tabindex="-1">Require Options <a class="header-anchor" href="#require-options" aria-hidden="true">#</a></h2><h3 id="inherit-line" tabindex="-1">Inherit <a href="/guide/shapes/Line">Line</a> <a class="header-anchor" href="#inherit-line" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>points</td><td>MayBeRef&lt;number[]&gt;</td><td>Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3]</td></tr></tbody></table><h3 id="inherit-shape" tabindex="-1">Inherit <a href="/guide/essentials/Shape">Shape</a> <a class="header-anchor" href="#inherit-shape" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>x</td><td><code>MayBeRef&lt;number&gt;</code></td><td>offset x</td></tr><tr><td>y</td><td><code>MayBeRef&lt;number&gt;</code></td><td>offset y</td></tr></tbody></table><h2 id="optional-options" tabindex="-1">Optional Options <a class="header-anchor" href="#optional-options" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>pointerLength</td><td><code>MayBeRef&lt;number&gt;</code></td><td>10</td><td>Arrow pointer length.</td></tr><tr><td>pointerWidth</td><td><code>MayBeRef&lt;number&gt;</code></td><td>10</td><td>Arrow pointer width.</td></tr><tr><td>pointerAtBeginning</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>false</td><td>Do we need to draw pointer on beginning position?</td></tr><tr><td>pointerAtEnding</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>true</td><td>Do we need to draw pointer on ending position?</td></tr></tbody></table><h3 id="inherit-line-1" tabindex="-1">Inherit <a href="/guide/shapes/Line">Line</a> <a class="header-anchor" href="#inherit-line-1" aria-hidden="true">#</a></h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>tension</td><td><code>MayBeRef&lt;number&gt;</code></td><td>0</td><td>Higher values will result in a more curvy line. A value of 0 will result in no interpolation.</td></tr><tr><td>closed</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>false</td><td>Defines whether or not the line shape is closed, creating a polygon or blob (<code>quadraticCurveTo</code>)</td></tr><tr><td>bezier</td><td><code>MayBeRef&lt;boolean&gt;</code></td><td>false</td><td>If no tension is provided but <code>bezier=true</code>, we draw the line as a bezier using the passed points (<code>bezierCurveTo</code>)</td></tr></tbody></table><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Stage</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Layer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Arrow</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fcanvas</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> stage </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Stage</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mount</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> layer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Layer</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addTo</span><span style="color:#A6ACCD;">(stage)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arrow </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Arrow</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">points</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">width </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> stage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">height </span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  pointerLength: </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">pointerWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">fill</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">stroke</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">black</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">strokeWidth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addTo</span><span style="color:#A6ACCD;">(layer)</span></span>
<span class="line"></span></code></pre></div>`,16);function c(d,i,y,D,h,F){const s=l("Preview");return n(),e("div",null,[r,t(s)])}const u=a(p,[["render",c]]);export{A as __pageData,u as default};
