import{_ as l,o,c as p,a,e as s,d as n}from"./app.1366efc1.js";const f=JSON.parse('{"title":"@fcanvas/communicate","description":"","frontmatter":{},"headers":[],"relativePath":"guide/plugins/communicate.md","lastUpdated":1678014340000}'),t={name:"guide/plugins/communicate.md"},e=a("",24),c=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"Name"),s("th",null,"Type"),s("th",null,"Description")])]),s("tbody",null,[s("tr",null,[s("td",null,"port"),s("td",null,"LikeMessagePort"),s("td",null,[n("Current port to listen and process. Example "),s("code",null,"self"),n(" in "),s("code",null,"worker")])]),s("tr",null,[s("td",null,"name"),s("td",null,"string"),s("td",null,"The name of the listen")]),s("tr",null,[s("td",null,"cb"),s("td",null,"Function"),s("td",null,[n("Its handler function takes a sequence of "),s("code",null,"arguments"),n(" passed from "),s("code",null,"put"),n(" or "),s("code",null,"pit"),n(" and returns a result either a "),s("code",null,"config"),n(" or a "),s("code",null,"Promise")])]),s("tr",null,[s("td",null,"options"),s("td",{"once?:":"",boolean:""}),s("td",null,[n("if "),s("code",null,"once: true"),n(" is enabled the listener will self-destruct after being called once by "),s("code",null,"put"),n(" or "),s("code",null,"pit")])])])],-1),r=a("",20),y=[e,c,r];function D(F,i,C,A,d,u){return o(),p("div",null,y)}const g=l(t,[["render",D]]);export{f as __pageData,g as default};
